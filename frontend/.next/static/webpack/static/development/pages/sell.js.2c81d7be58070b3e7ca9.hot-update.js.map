{"version":3,"file":"static/webpack/static\\development\\pages\\sell.js.2c81d7be58070b3e7ca9.hot-update.js","sources":["webpack:///./components/CreateItem.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Mutation } from 'react-apollo';\r\nimport Form from './styles/Form';\r\nimport formatMoney from '../lib/formatMoney';\r\nimport gql from 'graphql-tag';\r\nimport Error from './ErrorMessage';\r\nimport Router from 'next/router';\r\nconst CREATE_ITEM_MUTATION = gql`\r\n  mutation CREATE_ITEM_MUTATION(\r\n    $title: String!\r\n    $description: String!\r\n    $price: Int!\r\n    $image: String\r\n    $largeImage: String\r\n  ) {\r\n    createItem(\r\n      title: $title\r\n      description: $description\r\n      price: $price\r\n      image: $image\r\n      largeImage: $largeImage\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n\r\nclass CreateItem extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        description: '',\r\n        image: '',\r\n        largeImage: '',\r\n        price: 0,\r\n      };\r\n\r\n      handleChange = (e) =>{\r\n           const {name,type,value} = e.target;\r\n           const val = type === 'number'?parseFloat(value):value;\r\n           console.log(name);\r\n           this.setState({[name]:val});\r\n\r\n      };\r\n\r\n       uploadFile = async e => {\r\n\r\n          const files = e.target.files;\r\n          const data = new FormData();\r\n          data.append('file',files[0]);\r\n          data.append('upload_preset','sickfits');\r\n          const res = await fetch('https://api.cloudinary.com/v1_1/dwsfwm6yj/image/upload',{\r\n            method:'POST',\r\n            body:data,\r\n\r\n          });\r\n          const file = await res.json();\r\n          console.log(file);\r\n          this.setState({\r\n            image:file.secure_url,\r\n            largeImage:file.eager[0].secure_url,\r\n          });\r\n      };\r\n    render() {\r\n        return(\r\n\r\n            <Mutation\r\n    //use refetch queries instead on any mutation which will then tell particular queries to run again and then the cache is maintained/updated\r\n            // refetchQueries={}\r\n            //\r\n            mutation={CREATE_ITEM_MUTATION}\r\n            variables={this.state} >\r\n              {/* So wrap the form in Mutation tags...which will take some parameters ...again an async fn...which will get triggered on submit\r\n              and then redirect to the page with that product id*/}\r\n\r\n                {(CreateItem,{loading,error})=>(\r\n\r\n\r\n                <Form onSubmit={async e => {\r\n                    //Stop the form from submitting\r\n                    e.preventDefault();\r\n                    //call the mutation\r\n                    const res = await CreateItem();\r\n                    //change to single item page\r\n                    console.log(res);\r\n                    Router.push({\r\n                        pathname:'/items',\r\n                        query:{id:res.data.createItem.id}\r\n                    })\r\n                }} >\r\n\r\n                <Error error={error} />\r\n                <fieldset disabled={loading} aria-busy={loading}>\r\n\r\n                <label htmlFor=\"file\">\r\n                        Image\r\n                        <input\r\n                        type=\"file\"\r\n                        id=\"file\"\r\n                        name=\"file\"\r\n                        placeholder=\"Upload an image\"\r\n                        required\r\n                        onChange={this.uploadFile}\r\n                        />\r\n                        {this.state.image && (\r\n                        <img width=\"200\" src={this.state.image} alt=\"Upload Preview\" />\r\n                        )}\r\n                    </label>\r\n                <label htmlFor=\"title\">\r\n                Title\r\n                <input type=\"text\"\r\n                id=\"title\"\r\n                name=\"title\"\r\n                placeholder=\"title\"\r\n                required\r\n                value={this.state.title}\r\n                onChange={this.handleChange}/>\r\n                </label>\r\n\r\n                <label htmlFor=\"price\">\r\n                Price\r\n                <input type=\"number\"\r\n                id=\"price\"\r\n                name=\"price\"\r\n                placeholder=\"Price\"\r\n                required\r\n                value={this.state.price}\r\n                onChange={this.handleChange}/>\r\n                </label>\r\n                <label htmlFor=\"description\">\r\n                        Description\r\n                        <textarea\r\n                        id=\"description\"\r\n                        name=\"description\"\r\n                        placeholder=\"Enter A Description\"\r\n                        required\r\n                        value={this.state.description}\r\n                        onChange={this.handleChange}\r\n                        />\r\n                    </label>\r\n                    <button type=\"submit\">Submit</button>\r\n                    </fieldset>\r\n\r\n                </Form>\r\n\r\n\r\n                )}\r\n\r\n\r\n            </Mutation>\r\n\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default CreateItem;\r\nexport { CREATE_ITEM_MUTATION };\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAqBA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AALA;AAAA;AAOA;AACA;AAFA;AACA;AAPA;AAMA;AANA;AAAA;AACA;AADA;AAWA;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAiBA;AAAA;AACA;AAAA;AAIA;AACA;AAHA;AAIA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAajEA;AA+EA;;;;AA/HA;AACA;AAiIA;;;;;A","sourceRoot":""}