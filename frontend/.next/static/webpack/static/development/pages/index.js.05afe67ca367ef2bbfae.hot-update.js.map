{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.05afe67ca367ef2bbfae.hot-update.js","sources":["webpack:///./components/ErrorMessage.js","webpack:///./components/Pagination.js"],"sourcesContent":["import styled from 'styled-components';\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst ErrorStyles = styled.div`\n  padding: 2rem;\n  background: white;\n  margin: 2rem 0;\n  border: 1px solid rgba(0, 0, 0, 0.05);\n  border-left: 5px solid red;\n  p {\n    margin: 0;\n    font-weight: 100;\n  }\n  strong {\n    margin-right: 1rem;\n  }\n`;\n\nconst DisplayError = ({ error }) => {\n  if (!error || !error.message) return null;\n  if (error.networkError && error.networkError.result && error.networkError.result.errors.length) {\n    return error.networkError.result.errors.map((error, i) => (\n      <ErrorStyles key={i}>\n        <p data-test=\"graphql-error\">\n          <strong>Shoot!</strong>\n          {error.message.replace('GraphQL error: ', '')}\n        </p>\n      </ErrorStyles>\n    ));\n  }\n  return (\n    <ErrorStyles>\n      <p data-test=\"graphql-error\">\n        <strong>Shoot!</strong>\n        {error.message.replace('GraphQL error: ', '')}\n      </p>\n    </ErrorStyles>\n  );\n};\n\nDisplayError.defaultProps = {\n  error: {},\n};\n\nDisplayError.propTypes = {\n  error: PropTypes.object,\n};\n\nexport default DisplayError;\n","import React from 'react';\r\nimport PaginationStyles from './styles/PaginationStyles';\r\nimport gql from 'graphql-tag';\r\nimport {Query} from 'react-apollo';\r\nimport {perPage} from '../config';\r\nimport Head from 'next/head';\r\nimport Link from 'next/link';\r\nimport Error from './ErrorMessage';\r\n\r\nconst PAGINATION_QUERY = gql`\r\n\r\n    query PAGINATION_QUERY{\r\n        itemsConnection{\r\n            aggregate{\r\n                count\r\n            }\r\n        }\r\n    }\r\n\r\n`;\r\nconst Pagination = props =>(\r\n    <PaginationStyles>\r\n        <Query query={PAGINATION_QUERY}>\r\n    {({ data, loading, error }) => {\r\n      if (loading) return <p>Loading...</p>;\r\n      if (error) return <Error error={error} />;\r\n      const count = data.itemsConnection.aggregate.count\r\n      const pages = Math.ceil(count / perPage);\r\n      const page = props.page;\r\n      return (\r\n        <PaginationStyles data-test=\"pagination\">\r\n          <Head>\r\n            <title>\r\n              Sick Fits! — Page {page} of {pages}\r\n            </title>\r\n          </Head>\r\n          <Link\r\n            prefetch\r\n            href={{\r\n              pathname: 'items',\r\n              query: { page: page - 1 },\r\n            }}\r\n          >\r\n            <a className=\"prev\" aria-disabled={page <= 1}>\r\n              ← Prev\r\n            </a>\r\n          </Link>\r\n          <p>\r\n            Page {props.page} of\r\n            <span className=\"totalPages\">{pages}</span>!\r\n          </p>\r\n          <p>{count} Items Total</p>\r\n          <Link\r\n            prefetch\r\n            href={{\r\n              pathname: 'items',\r\n              query: { page: page + 1 },\r\n            }}\r\n          >\r\n            <a className=\"next\" aria-disabled={page >= pages}>\r\n              Next →\r\n            </a>\r\n          </Link>\r\n        </PaginationStyles>\r\n      );\r\n    }}\r\n  </Query>\r\n    </PaginationStyles>\r\n)\r\n\r\nexport default Pagination;"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAcA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AADA;AAIA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AA7CA;AACA;AAiDA;;;;A","sourceRoot":""}