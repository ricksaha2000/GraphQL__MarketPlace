{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.76a5f5e4af1a3f18d9fc.hot-update.js","sources":["webpack:///./components/Items.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport {Query} from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\nimport styled from \"styled-components\";\r\nimport Item from \"./Item\";\r\nimport Pagination from './Pagination';\r\nimport { perPage } from '../config';\r\nconst ALL_ITEMS_QUERY = gql`\r\n\r\n    query ALL_ITEMS_QUERY(\r\n        $skip:Int = 0,\r\n        $first:Int = ${perPage}\r\n    ){\r\n        items(\r\n\r\n            first:$first,\r\n            skip:$skip,\r\n            orderBy: createdAt_DESC,\r\n\r\n\r\n        ){\r\n            id\r\n            title\r\n            price\r\n            description\r\n            image\r\n            largeImage\r\n        }\r\n    }\r\n\r\n`;\r\n\r\nconst Center = styled.div`\r\n\r\n    text-align:center;\r\n\r\n`;\r\n\r\nconst ItemsList = styled.div`\r\n\r\ndisplay:grid;\r\ngrid-template-columns:1fr 1fr;\r\ngrid-gap:60px;\r\nmax-width:${props => props.theme.maxWidth};\r\nmargin:0 auto;\r\n\r\n`;\r\n\r\nclass Items extends Component {\r\n    render() {\r\n        return (\r\n            <Center>\r\n                <Pagination page={this.props.page} />\r\n                {/* <p>Items</p> */}\r\n{/* Instead of making the Query Parameters as HOC ,\r\nwe are trying to use renderprops() ... here we are using Query component\r\nand passing the query as props and then inside we have to write only a function,no\r\nother component can go in between the Query tag */}\r\n                <Query\r\n                query={ALL_ITEMS_QUERY}\r\n                variables={{\r\n// This logic is suppose u are in page 1 -> then you get skip value as\r\n//perPage =4\r\n//1*4-4 ie. 0 , hence we dont skip anything ,\r\n//on page 2 , 2*4-4 = 4 , skip first four\r\n                    skip:this.props.page *perPage - perPage,\r\n                    first:perPage,\r\n\r\n                }\r\n                }>\r\n{/* destructure the payload returned by apollo */}\r\n{/* {}--> indicates start of js and end of jsx */}\r\n            {\r\n                ({data,error,loading}) =>\r\n                    {\r\n                        if(loading) return <p>Loading...</p>\r\n\r\n                        if(error) return <p>Error:{error.message}</p>\r\n\r\n                        return <ItemsList>\r\n\r\n                            {data.items.map(item =><Item item={item} key={item.id}  /> )  }\r\n\r\n                        </ItemsList>\r\n                    }\r\n            }\r\n\r\n                </Query>\r\n                <Pagination page={this.props.page}/>\r\n\r\n            </Center>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Items;\r\nexport {ALL_ITEMS_QUERY};"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAyBA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAIA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA5CA;AACA;AA8CA;;;;;A","sourceRoot":""}